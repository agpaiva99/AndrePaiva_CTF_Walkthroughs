TRYHACKME Brooklyn Nine Nine Room Write Up

**Port and Service Enumeration**

```
$ nmap -sC -sV $IP
Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-10-05 20:08 BST
Nmap scan report for 10.10.168.56
Host is up (0.066s latency).
Not shown: 997 closed tcp ports (conn-refused)
PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to ::ffff:10.14.89.164
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 4
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
|_-rw-r--r--    1 0        0             119 May 17  2020 note_to_jake.txt
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 16:7f:2f:fe:0f:ba:98:77:7d:6d:3e:b6:25:72:c6:a3 (RSA)
|   256 2e:3b:61:59:4b:c4:29:b5:e8:58:39:6f:6f:e9:9b:ee (ECDSA)
|_  256 ab:16:2e:79:20:3c:9b:0a:01:9c:8c:44:26:01:58:04 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 22.70 seconds

```

Key takeways:

  - FTP server allows for anonymous login and there is an interesting file called note_to_jake.txt
  - HTTP (Web service) is running Apache 2.4.29 on Ubuntu.
  - SSH (Secure Shell) is running OpenSSH 7.6p1 on Ubuntu.


**Acessing FTP server anonymously**

```
$ ftp $IP               
Connected to 10.10.200.49.
220 (vsFTPd 3.0.3)
Name (10.10.200.49:<redacted>): anonymous
331 Please specify the password.
Password: 
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
```

Transfering interesting file to local machine:

```
ftp> get note_to_jake.txt
local: note_to_jake.txt remote: note_to_jake.txt
229 Entering Extended Passive Mode (|||44119|)
150 Opening BINARY mode data connection for note_to_jake.txt (119 bytes).
100% |********************************|   119      516.49 KiB/s    00:00 ETA
226 Transfer complete.
119 bytes received in 00:00 (0.67 KiB/s)
```
```
$ cat note_to_jake.txt 
From Amy,

Jake please change your password. It is too weak and holt will be mad if someone hacks into the nine nine
```
While the information from these messages is useful, it’s not sufficient, so I decided to explore the website hosted on port 80.

By exploring the website source code, I found the following message:

```
(...)

<p>This example creates a full page background image. Try to resize the browser window to see how it always will cover the full screen (when scrolled to top), and that it scales nicely on all screen sizes.</p>
<!-- Have you ever heard of steganography? -->
</body>

(...)
```

Based on these clues, I decided my next step would be to download the only image on the website and use steghide to analyze it for hidden data.

**Using steghide and stegcracker to reveal hidden information**

```
# steghide extract -sf /home/<redacted>/Downloads/brooklyn99.jpg
Enter passphrase: 
```
The file is protected with a passphrase, so I’ll use stegcracker to brute force the password and extract the hidden data.
```

```

```


